<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 170.97"><defs><style>.cls-1,.cls-2{fill-rule:evenodd;}.cls-2{fill:red;}</style></defs><g id="Warstwa_2" data-name="Warstwa 2"><g id="LOGOS"><g id="RGB"><polygon class="cls-1" points="253.5 125.59 241.2 104 229.18 125.59 199.53 125.59 226.99 84.75 200.62 47.22 230.68 47.22 241.34 66.06 252.27 47.22 282.05 47.22 255.68 84.75 283.28 125.59 253.5 125.59 253.5 125.59"/><path class="cls-1" d="M415.21,127.79c-10,0-17.36-4-23.09-12.51v10.45H366.71V23.2H392V57.12c5.19-8,13.25-12.23,23.5-12.23,18.44,0,32.52,16.49,32.52,41.93,0,24.75-13.66,41-32.79,41M407,65c-9.56,0-15.3,7.42-15.3,20.62,0,14.3,5.19,21.72,14.75,21.72s15.17-7.56,15.17-21.72C421.63,72.66,415.89,65,407,65"/><path class="cls-1" d="M346.09,66.53V47.22H333v-24H307.56v24H297.17V66.53h10.39V101c0,5.91-3.53,34.34,38.25,24.75V109.37a30,30,0,0,1-3.28.13c-8.06,0-9.56-3.44-9.56-12.78V66.53Z"/><path class="cls-2" d="M4.32,171H165.58a4.31,4.31,0,0,0,4.32-4.32V4.32A4.31,4.31,0,0,0,165.58,0H4.32A4.31,4.31,0,0,0,0,4.32V166.65A4.31,4.31,0,0,0,4.32,171Zm111.14-49.76c-.71-.67-1.43-1.34-2.15-2A208,208,0,0,0,88.14,99.67a256.68,256.68,0,0,1-25.43,13.58l-53-10.62a246.51,246.51,0,0,0,30.48-10q10-4,19.43-8.9-6-2.81-12.1-5.29a247.49,247.49,0,0,0-30.47-10L70,57.73q9,4.17,17.49,8.93A203,203,0,0,0,106,51.75c.73-.65,1.44-1.31,2.16-2l44.71-8.49A217.46,217.46,0,0,1,112.56,82.7a219.68,219.68,0,0,1,47.61,47l-44.71-8.49Z"/></g></g></g><script xmlns="">{
            document.currentScript.dataset.injected = true;
            const o = JSON.parse(decodeURIComponent(escape(atob('eyJ1c2VyQWdlbnQiOiJNb3ppbGxhLzUuMCAoWDExOyBMaW51eCB4ODZfNjQ7IHJ2OjEyOC4wKSBHZWNrby8yMDEwMDEwMSBGaXJlZm94LzEyOC4wIiwiYXBwVmVyc2lvbiI6IjUuMCAoWDExKSIsInBsYXRmb3JtIjoiTGludXgiLCJ2ZW5kb3IiOiIiLCJwcm9kdWN0IjoiR2Vja28iLCJ1c2VyQWdlbnREYXRhIjoiW2RlbGV0ZV0iLCJvc2NwdSI6IkxpbnV4IHg4Nl82NCIsInByb2R1Y3RTdWIiOiIyMDEwMDEwMSIsImJ1aWxkSUQiOiIyMDE4MTAwMTAwMDAwMCJ9'))));

            if (o.userAgentDataBuilder) {
              const v = new class NavigatorUAData {
                #p;

                constructor({p, ua}) {
                  this.#p = p;

                  const version = p.browser.major;
                  const name = p.browser.name === 'Chrome' ? 'Google Chrome' : p.browser.name;

                  this.brands = [{
                    brand: name,
                    version
                  }, {
                    brand: 'Chromium',
                    version
                  }, {
                    brand: 'Not=A?Brand',
                    version: '24'
                  }];

                  this.mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(ua);

                  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-CH-UA-Platform
                  this.platform = 'Unknown';
                  if (p.os &amp;&amp; p.os.name) {
                    const name = p.os.name.toLowerCase();
                    if (name.includes('mac')) {
                      this.platform = 'macOS';
                    }
                    else if (name.includes('debian')) {
                      this.platform = 'Linux';
                    }
                    else {
                      this.platform = p.os.name;
                    }
                  }
                }
                toJSON() {
                  return {
                    brands: this.brands,
                    mobile: this.mobile,
                    platform: this.platform
                  };
                }
                getHighEntropyValues(hints) {
                  if (!hints || Array.isArray(hints) === false) {
                    return Promise.reject(Error("Failed to execute 'getHighEntropyValues' on 'NavigatorUAData'"));
                  }

                  const r = this.toJSON();

                  if (hints.includes('architecture')) {
                    r.architecture = this.#p?.cpu?.architecture || 'x86';
                  }
                  if (hints.includes('bitness')) {
                    r.bitness = '64';
                  }
                  if (hints.includes('model')) {
                    r.model = '';
                  }
                  if (hints.includes('platformVersion')) {
                    r.platformVersion = this.#p?.os?.version || '10.0.0';
                  }
                  if (hints.includes('uaFullVersion')) {
                    r.uaFullVersion = this.brands[0].version;
                  }
                  if (hints.includes('fullVersionList')) {
                    r.fullVersionList = this.brands;
                  }
                  return Promise.resolve(r);
                }
              }(o.userAgentDataBuilder);

              navigator.__defineGetter__('userAgentData', () =&gt; {
                return v;
              });
            }
            delete o.userAgentDataBuilder;

            for (const key of Object.keys(o)) {
              if (o[key] === '[delete]') {
                delete Object.getPrototypeOf(window.navigator)[key];
              }
              else {
                navigator.__defineGetter__(key, () =&gt; {
                  if (o[key] === 'empty') {
                    return '';
                  }
                  return o[key];
                });
              }
            }
          }</script></svg>